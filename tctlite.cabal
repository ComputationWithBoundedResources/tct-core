Name:               tct
Version:            3.0
Author:
  Martin Avanzini <martin.avanzini@uibk.ac.at>,
  Andreas Kochesser <andreas.kochesser@uibk.ac.at>,
  Georg Moser <georg.moser@uibk.ac.at>,
  Michael Schaper <michael.schaper@uibk.ac.at>,
  Maria Schett <maria.schett@uibk.ac.at>
Category: Program Analysis
Stability: Experimental
License: BSD3
License-file: LICENSE
Homepage: http://cl-informatik.uibk.ac.at/software/tct/
Synopsis: A Complexity Analyser for Term Rewrite Systems
Description:
  The Tyrolean Complexity Tool (TcT for short) is a tool
  for proving upper bounds on the derivational and runtime complexity
  of term rewriting systems automatically.

cabal-version: >= 1.8
build-type: Simple

Executable tctl
  hs-source-dirs: src-main
  main-is: Main.hs
  build-depends:
    base == 4.*,
    tct  == 3.*
  ghc-options:
    -j -threaded -Wall -O -fno-warn-orphans -fno-spec-constr-count -rtsopts -with-rtsopts=-N

Library
  exposed-modules:
    Tct
    Tct.Core
    Tct.Core.Certificate
    Tct.Core.Forks
    Tct.Core.Processor
    Tct.Core.ProofTree
    Tct.Core.Strategy
    Tct.Core.TctM
    Tct.Options
    Tct.Pretty
    Tct.Processors.Combinators
    Tct.SemiRing
    Tct.Xml
  build-depends:
    ansi-wl-pprint       >= 0.6 && < 0.7,
    async                == 2.*,
    base                 == 4.*,
    bytestring           == 0.10.*,
    containers           >= 0.5 && < 0.6,
    directory            == 1.2.*,
    dyre                 == 0.8.*,
    filepath             == 1.3.*,
    mtl                  >= 2.1 && < 2.2,
    old-time             == 1.1.*,
    optparse-applicative == 0.9.*,
    parsec               >= 3 && < 3.2,
    text                 == 1.1.*,
    xmlgen               >= 0.6 && < 0.7,
    void                 == 0.6.*,
    rank1dynamic == 0.2.*,

    smtlib         == 0.*,
    term-rewriting == 0.*
  hs-source-dirs: src
  ghc-options:
    -j -threaded -Wall -O -fno-warn-orphans -fno-spec-constr-count -rtsopts -with-rtsopts=-N
  extensions: 
    GeneralizedNewtypeDeriving,
    TypeFamilies,
    ConstraintKinds, 
    GADTs, 
    FlexibleContexts, 
    MultiParamTypeClasses, 
    TypeSynonymInstances,
    DeriveDataTypeable,
    DeriveFunctor, 
    DeriveFoldable, 
    DeriveTraversable
